// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?

  accounts       Account[]
  sessions       Session[]
  events         Event[]    @relation("OrganizerEvents")
  participations Participant[]

  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum GameType {
  SOCCER
  CRICKET
}

model Event {
  id             String    @id @default(cuid())
  title          String
  description    String?
  location       String
  gameType       GameType
  startTime      DateTime
  maxPlayers     Int
  costPerPlayer  Decimal   @db.Decimal(10,2)

  organizerId    String
  organizer      User      @relation("OrganizerEvents", fields: [organizerId], references: [id], onDelete: Cascade)

  participants   Participant[]

  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  @@index([startTime])
  @@index([gameType])
}

model Participant {
  id        String   @id @default(cuid())
  userId    String
  eventId   String
  joinedAt  DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@unique([userId, eventId])
  @@index([eventId])
}
